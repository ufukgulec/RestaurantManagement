@using Newtonsoft.Json
@model List<RestaurantManagement.Domain.Entities.Category>
@{
    ViewData["Title"] = "Index";
}
@section Styles{
    <link rel="stylesheet" type="text/css" href="https://cdn3.devexpress.com/jslib/22.1.6/css/dx.common.css" />
    <link rel="stylesheet" type="text/css" href="https://cdn3.devexpress.com/jslib/22.1.6/css/dx.light.css" />
}
    <div class="d-flex flex-column-fluid">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 mb-5">
                    <div class="card card-custom card-collapsed sql" data-card="true" id="ProductRelatedInformationR">
                        <div class="card-header">
                            <div class="card-title">
                                <h3 class="card-label">Fiyat Grafiği</h3>
                            </div>
                            <div class="card-toolbar">
                                <a href="#" class="btn btn-icon btn-sm btn-light-primary mr-1" data-card-tool="toggle">
                                    <i class="ki ki-arrow-down icon-nm"></i>
                                </a>
                                <a href="#" class="btn btn-icon btn-sm btn-light-success mr-1" data-card-tool="reload">
                                    <i class="ki ki-reload icon-nm"></i>
                                </a>
                                <a href="#" class="btn btn-icon btn-sm btn-light-danger mr-1" data-card-tool="remove">
                                    <i class="ki ki-close icon-nm"></i>
                                </a>
                                <a href="#" class="btn btn-sm btn-icon btn-light-warning mr-1">
                                    <i class="fas fa-save"></i>
                                </a>
                                <a href="#" class="btn btn-sm btn-icon btn-light-success mr-1" onclick="sqlRun(document.getElementById('SqlContent').value)">
                                    <i class="fas fa-caret-square-right"></i>
                                </a>
                            </div>
                        </div>
                        <div class="card-body">
                            <div id="ProductRelatedBar"></div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-12 mb-5">
                    <div class="card card-custom card-collapsed sql" data-card="true" id="ProductRelatedInformationR">
                        <div class="card-header">
                            <div class="card-title">
                                <h3 class="card-label">Sipariş Grafiği</h3>
                            </div>
                            <div class="card-toolbar">
                                <a href="#" class="btn btn-icon btn-sm btn-light-primary mr-1" data-card-tool="toggle">
                                    <i class="ki ki-arrow-down icon-nm"></i>
                                </a>
                                <a href="#" class="btn btn-icon btn-sm btn-light-success mr-1" data-card-tool="reload">
                                    <i class="ki ki-reload icon-nm"></i>
                                </a>
                                <a href="#" class="btn btn-icon btn-sm btn-light-danger mr-1" data-card-tool="remove">
                                    <i class="ki ki-close icon-nm"></i>
                                </a>
                                <a href="#" class="btn btn-sm btn-icon btn-light-warning mr-1">
                                    <i class="fas fa-save"></i>
                                </a>
                                <a href="#" class="btn btn-sm btn-icon btn-light-success mr-1" onclick="sqlRun(document.getElementById('SqlContent').value)">
                                    <i class="fas fa-caret-square-right"></i>
                                </a>
                            </div>
                        </div>
                        <div class="card-body">
                            <div id="ProductRelatedBar"></div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-4 mb-5">
                    <div class="card card-custom card-collapsed" data-card="true" id="ProductRelatedInformationL">
                        <div class="card-header">
                            <div class="card-title">
                                <h3 class="card-label">Pie Chart</h3>
                            </div>
                            <div class="card-toolbar">
                                <a href="#" class="btn btn-icon btn-sm btn-light-primary mr-1" data-card-tool="toggle">
                                    <i class="ki ki-arrow-down icon-nm"></i>
                                </a>
                                <a href="#" class="btn btn-icon btn-sm btn-light-success mr-1" data-card-tool="reload">
                                    <i class="ki ki-reload icon-nm"></i>
                                </a>
                                <a href="#" class="btn btn-icon btn-sm btn-light-danger" data-card-tool="remove">
                                    <i class="ki ki-close icon-nm"></i>
                                </a>
                            </div>
                        </div>
                        <div class="card-body">
                            <div id="ProductRelatedPie"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @section Scripts{
    <script src="https://cdn3.devexpress.com/jslib/22.1.6/js/dx.all.js"></script>
    <script>
        jQuery(document).ready(function () {
            ChartCard("ProductRelatedInformationR", "ProductRelatedBar", "/Product/GetProductRelatedInformation", "Bar");
            ChartCard("ProductRelatedInformationL", "ProductRelatedPie", "/Product/GetProductRelatedInformation", "Pie");
        });
        var ChartCard = function (cardId, chartId, actionUrl, chartType) {
            // This card is lazy initialized using data-card="true" attribute. You can access to the card object as shown below and override its behavior
            var card = new KTCard(cardId);

            card.on('beforeExpand', function (card) {
                if (document.getElementById(chartId).children.length == 0) {
                    KTApp.block(card.getSelf(), {
                        type: 'loader',
                        state: 'primary',
                        message: 'Lütfen Bekleyiniz...'
                    });

                    $.get(actionUrl, function (data, status) {
                        if (chartType == "Bar") {
                            BarChartBind(JSON.parse(data), "#" + chartId);
                        }
                        else if (chartType == "Pie") {
                            PieChartBind(JSON.parse(data), "#" + chartId);
                        }
                    });

                    KTApp.unblock(card.getSelf());
                }
            });

            // Remove event handlers
            card.on('beforeRemove', function (card) {
                toastr.info('Before remove event fired!');

                return confirm('Are you sure to remove this card ?');  // remove card after user confirmation
            });

            card.on('afterRemove', function (card) {
                setTimeout(function () {
                    toastr.warning('After remove event fired!');
                }, 2000);
            });

            card.on('reload', function (card) {
                KTApp.block(card.getSelf(), {
                    type: 'loader',
                    state: 'primary',
                    message: 'Lütfen Bekleyiniz...'
                });
                $.get(actionUrl, function (data, status) {
                    if (chartType == "Bar") {
                        BarChartBind(JSON.parse(data), "#" + chartId);
                    }
                    else if (chartType == "Pie") {
                        PieChartBind(JSON.parse(data), "#" + chartId);
                    }
                });
                KTApp.unblock(card.getSelf());
            });
        }

        function BarChartBind(dataSource, chartId) {
            $(chartId).dxChart({
                dataSource,
                export: {
                    enabled: true,
                },
                animation: {
                    duration: 1000,
                    easing: "linear",
                    enabled: true,
                    maxPointCountSupported: 300
                },
                series: {
                    name: 'Adet',
                    type: 'bar',
                    color: '#ffaa66',
                    barWidth: 30,
                },
                legend: {
                    visible: false,
                },

            });
        }
        const legendSettings = {
            verticalAlignment: 'bottom',
            horizontalAlignment: 'center',
            itemTextPosition: 'right',
            rowCount: 2,
        };
        function PieChartBind(dataSource, chartId) {
            $(chartId).dxPieChart({
                palette: 'bright',
                legend: legendSettings,
                dataSource,
                series: [
                    {
                        argumentField: 'arg',
                        valueField: 'val',
                        label: {
                            visible: true,
                            connector: {
                                visible: true,
                                width: 1,
                            },
                            //format: 'fixedPoint',
                            //customizeText(point) {
                            //    return `${point.argumentText}: ${point.valueText}`;
                            //},
                        },
                    },
                ],
                export: {
                    enabled: true,
                },
                onPointClick(e) {
                    const point = e.target;

                    toggleVisibility(point);
                },
                onLegendClick(e) {
                    const arg = e.target;

                    toggleVisibility(this.getAllSeries()[0].getPointsByArg(arg)[0]);
                },
            });

            function toggleVisibility(item) {
                if (item.isVisible()) {
                    item.hide();
                } else {
                    item.show();
                }
            }
        }

    </script>
}